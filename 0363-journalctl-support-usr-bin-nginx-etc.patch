From 35ca99e200cd01fb27bde1930100a3057215459e Mon Sep 17 00:00:00 2001
From: Shawn Landden <shawnlandden@gmail.com>
Date: Wed, 30 May 2012 09:43:23 -0700
Subject: [PATCH] journalctl: support /usr/bin/nginx, etc (cherry picked from
 commit 509407003de0c77259e5e46b567d2a464acbb6f4)

Conflicts:
	TODO
---
 src/journal/journalctl.c |   25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/src/journal/journalctl.c b/src/journal/journalctl.c
index aaf455a..4109813 100644
--- a/src/journal/journalctl.c
+++ b/src/journal/journalctl.c
@@ -29,6 +29,7 @@
 #include <sys/poll.h>
 #include <time.h>
 #include <getopt.h>
+#include <sys/stat.h>
 
 #include <systemd/sd-journal.h>
 
@@ -38,6 +39,8 @@
 #include "pager.h"
 #include "logs-show.h"
 
+#define SD_JOURNALCTL_EXE "_EXE="
+
 static OutputMode arg_output = OUTPUT_SHORT;
 static bool arg_follow = false;
 static bool arg_show_all = false;
@@ -205,6 +208,8 @@ int main(int argc, char *argv[]) {
         sd_journal *j = NULL;
         unsigned line = 0;
         bool need_seek = false;
+        struct stat st;
+        char* journal_exe_buff;
 
         log_parse_environment();
         log_open();
@@ -230,7 +235,25 @@ int main(int argc, char *argv[]) {
         }
 
         for (i = optind; i < argc; i++) {
-                r = sd_journal_add_match(j, argv[i], strlen(argv[i]));
+                if (strchr(argv[i], '=')) {
+                        r = sd_journal_add_match(j, argv[i], strlen(argv[i]));
+                } else {
+                        if (stat(argv[i], &st) < 0) {
+                                log_error("Failed to add match: %s", strerror(-r));
+                                goto finish; /* maybe try sd_journal_add_match() when stat() fails,
+                                              * even thought we know there is no '=' ? */
+                        } else if (S_ISREG(st.st_mode) &&
+                                   S_IXUSR & st.st_mode) {
+                                journal_exe_buff = malloc(strlen(SD_JOURNALCTL_EXE) + strlen(argv[i]) + 1);
+                                journal_exe_buff = strcpy(journal_exe_buff, SD_JOURNALCTL_EXE);
+                                strncat(journal_exe_buff, argv[i], strlen(argv[i]));
+                                r = sd_journal_add_match(j, journal_exe_buff, strlen(journal_exe_buff));
+                                free(journal_exe_buff);
+                        } else {
+                                log_error("File is not a regular file or is not executable: %s", argv[i]);
+                                goto finish;
+                        }
+                }
                 if (r < 0) {
                         log_error("Failed to add match: %s", strerror(-r));
                         goto finish;
